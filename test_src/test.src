	.. ASM test file
	..
	........ 1802 FIG-FORTH ................

BEEP	equ 0

CSTACK	EQU 9		.. forth stack pointer

USIZE	EQU 80H 	.. Number of bytes to copy
					... from origin to the user variable area

LIMITB	EQU 0FC00H

LAST   EQU  ZIP

FUN  EQU  ZAP-4

FORWARD  EQU FAN + 1

FAN  EQU  ZAP - 6

TRICKY   EQU  FAN

NOTADDR EQU LIMITB - 27


..... These are bad lines, for error trap testing ..............
..BAD1      EQU    NOPESTER
..BAD2 EQU 123X
..BAD3   EQU  FUN x 7
..BAD4   EQU  FUN + 
..BAD5   EQU  0123456H + 2 
................................................................


	..SETUP ROUTINES

	DIS
	DC 00

	LDI A.1(START); PHI R3
	LDI A.0(START); PLO R3

	ORG 10H

START	NOP		.. vector to the coldstart
	LBR COLD	... code

	NOP		.. vector to the warmstart
	LBR WARM	... code

	DC 070AH	..CPU number

WRMLP	LDA R7; STR R8; INC R8
	DEC RF; GLO RF
	BNZ WRMLP

	... Let's run FORTH
	LDI A.1(NEXT); PHI RC
ZOT	LDI A.0(NEXT); PLO RC

ZIP
ZAP
	LDI A.0(ABORT+2); PHI RA
		

RSTART	DC FILLER	..60 USE	(ROMVAR+0)
	DC NOOP 	..64 'R/W	(etc...)
	DC FILLER	..68
	DC 81A0H	..6A FHEAD
	DC NOOP-7	..6C FDP
	
	DC 086H, 'ORIGI', 0CEH	.. ORIGIN
	DC BSCR-8
ORGN	DC CONST
FILLER
	DEC RF

ABORT
	INC R2
	
BSCR	
NOOP
	INC RF
	
	..	ORG CONST + 0100H
	ORG START + 0100H
	DC 3
	
CONST
	DC 7
	DC CSTACK   .. This should be one byte or two? Should equates be one or two bytes?
	DC ZAP
	DC FUN
	DC COLD+4H
	SEQ
	
COLD
	OUT 2
	RET

WARM
	INP 2
	LBR START
	
NEXT
	SEQ; REQ
FIND	DC $+2
	DC 'abcd'
	DC $
	
HEXLITERALS
	DC 4H
	DC 24H
	DC 024H
	DC 123H
	DC 0123H
	DC 1234H


IF CSTACK	.. True
	DC 12
	LDI 033H
IF 0		.. False, nest 1
	DC 55	.. no code
ELSE
	DC 80
ENDI
	DC 62
ELSE
IF 1		.. True, nest 1
	DC 56	.. no code
ELSE
	DC 40	.. no code
ENDI
	DC 13	.. no code
ENDI

EARLY
	DC $ + 2
	BR EARLY

IF BEEP		.. False
IF 1		.. True, nest 1
	DC 56	.. no code
ELSE
	DC 58	.. no code
ENDI
	DC 24	.. no code
	LDI 099H	.. no code
	BR COLD	.. no code
ELSE
	DC 99
	BR LATER
ENDI

LATER
	DC $ + 2
	BR FIND
	
	END
	





	
